<Controls:MetroWindow x:Class="Metro.MainWindow"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                      Title="ScriptTool"
                      TitleCharacterCasing="Normal"
                      Height="400"
                      Width="800"                            
                      xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
                      Dialog:DialogParticipation.Register="{Binding}" Closing="MetroWindow_Closing">

    <Controls:MetroWindow.RightWindowCommands>
        <Controls:WindowCommands>

            <TextBox x:Name="TextBox_Title" Width="100" Margin="5px" TextChanged="TextBox_Title_TextChanged"/>
            <Button Name="Btn_ON" Click="Btn_ON_Click" Content="ON" Width="45"/>
            <Button Name="Btn_About" Click="Btn_About_Click" Content="About"/>
            <ToggleButton Content="Help" IsChecked="{Binding ElementName=MahAppFlyout, Path=IsOpen}" Cursor="Hand"/>
        </Controls:WindowCommands>
    </Controls:MetroWindow.RightWindowCommands>

    <Controls:MetroWindow.Flyouts>
        <Controls:FlyoutsControl>
            <Controls:Flyout x:Name="MahAppFlyout" Width="350">
                <ScrollViewer>
                    <TextBlock Width = "350" Margin = "5px" ScrollViewer.CanContentScroll="True">  
                        
                        <Run Foreground="Gold">⭐Match : match and get image point</Run><LineBreak/>
                        <Run Foreground="Orange">-@Path</Run><LineBreak/>
                        <Run Foreground="Orange">-@Path,@Threshold</Run><LineBreak/>
                         Path: image file path,use .png format<LineBreak/>                  
                        Threshold: 0.8~1.0(def 0.8) <LineBreak/>
                        ex: apple.png <LineBreak/>
                        <LineBreak/>
                        
                        <Run Foreground="Gold">⭐Move</Run><LineBreak/>
                        <Run Foreground="Orange">-@X,@Y</Run><LineBreak/>
                        <Run Foreground="Orange">-Empty</Run><LineBreak/>
                        X: screan point x value<LineBreak/> 
                        Y: screan point y value<LineBreak/>
                        Empty:if set Event,it can use image matching point<LineBreak/>          
                        ex: 500,600 <LineBreak/>
                        <LineBreak/>
                        
                        <Run Foreground="Gold">⭐Offset</Run><LineBreak/>
                        <Run Foreground="Orange">-@X,@Y</Run><LineBreak/>
                        X: move x value<LineBreak/> 
                        Y: move y value<LineBreak/>
                        ex:+10,-20 <LineBreak/>
                        <LineBreak/>

                        <Run Foreground="Gold">⭐Click : mouse input</Run><LineBreak/>
                        <Run Foreground="Orange">-@Action</Run><LineBreak/>        
                        Action: use Left_Down,Left_Up,Right_Down,Right_Up<LineBreak/>
                        ex: Left_Down<LineBreak/>
                        <LineBreak/>
                        
                        <Run Foreground="Gold">⭐SendKeyDown,SendKeyUp : keyboard input</Run><LineBreak/>
                        <Run Foreground="Orange">-@Key</Run><LineBreak/>        
                        Key: key value<LineBreak/>
                        ex: A<LineBreak/>
                        <LineBreak/>
                        
                        <Run Foreground="Gold">⭐ModifierKey : modifier key</Run><LineBreak/>
                        <Run Foreground="Orange">-@Key</Run><LineBreak/>        
                        Key: input like modifier key|key,<LineBreak/>
                        modifier key use CONTROL,MENU,SHIFT... <LineBreak/>
                        ex: CONTROL|A<LineBreak/>
                        <LineBreak/>
                        
                        <Run Foreground="Gold">⭐key : key in</Run><LineBreak/>
                        <Run Foreground="Orange">-@Key</Run><LineBreak/>        
                        Key: key in value<LineBreak/>
                        ex: 123abc<LineBreak/>
                        <LineBreak/>
                        
                        <Run Foreground="Gold">⭐Delay</Run><LineBreak/>
                        <Run Foreground="Orange">-@Time</Run><LineBreak/>        
                        Time: ms,1000 ms=1 second<LineBreak/>
                        ex: 1000<LineBreak/>
                        <LineBreak/>
                        
                        <Run Foreground="Gold">⭐Loop</Run><LineBreak/>
                        <Run Foreground="Orange">-@Times</Run><LineBreak/>     
                        <Run Foreground="Orange">-Empty</Run><LineBreak/>
                        Times: run several times<LineBreak/>
                        Empty: always running<LineBreak/>
                        ex: 5<LineBreak/>
                        <LineBreak/>
                        
                        <Run Foreground="Gold">⭐RemoveEvent</Run><LineBreak/>
                        <Run Foreground="Red">After the Event is established, it will always exist</Run><LineBreak/>
                        <Run Foreground="Red">if you don't want use it, use this</Run><LineBreak/>
                        <Run Foreground="Red">input want to remove Event in Event column</Run><LineBreak/>
                        <LineBreak/>

                    </TextBlock>
                </ScrollViewer>

            </Controls:Flyout>
        </Controls:FlyoutsControl>
    </Controls:MetroWindow.Flyouts>

    <Grid>
        <TabControl VerticalAlignment="Top">
            <TabItem Header="Main">
                <Grid Background="White">
                    <DataGrid CanUserSortColumns="False" Name="eDataGrid" AutoGenerateColumns="False" ItemsSource="{Binding}" SelectionUnit="Cell" SelectionMode="Single" IsReadOnly="False" IsEnabled="False"
                              Height="300" Margin="0,0,0,20"  VerticalAlignment="Center" HorizontalAlignment="Center" 
                              CellEditEnding="eDataGrid_CellEditEnding" CurrentCellChanged="eDataGrid_CurrentCellChanged" MouseDoubleClick="eDataGrid_MouseDoubleClick" DataGridCell.Selected="DataGridCell_Selected" >
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="#"/>
                            <DataGridCheckBoxColumn Header="Enable" Binding="{Binding Path=eTable_Enable}"/>
                            <DataGridTextColumn Header="Name" Binding="{Binding Path=eTable_Name}"/>
                            <DataGridTextColumn Header="Key" Binding="{Binding Path=eTable_Key}"/>
                            <DataGridTextColumn Header="State" Binding="{Binding Path=eTable_State}"/>
                            <DataGridTextColumn Header="Note" Binding="{Binding Path=eTable_Note}" MinWidth="150"/>
                            <DataGridTextColumn Header="Path" Binding="{Binding Path=eTable_Path}" MinWidth="200"/>
                            <DataGridTemplateColumn Header=" ">
                                <DataGridTemplateColumn.CellTemplate >
                                    <DataTemplate>
                                        <Image  Height="16" Width="16" Source="trash.png"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="+">
                                <DataGridTemplateColumn.CellTemplate >
                                    <DataTemplate>
                                        <Image  Height="16" Width="16" Source="plus.png"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>

                    <Controls:ToggleSwitch Toggled="Script_Toggle_Toggled" Name="Script_Toggle" Height="28" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="20,0,0,0" Grid.Column="1"></Controls:ToggleSwitch>
                </Grid>
            </TabItem>
            <TabItem Header="Edit">
                <Grid Background="White" Name="EditGrid">
                    <DataGrid CanUserSortColumns="False" AddingNewItem="mDataGrid_AddingNewItem" Name="mDataGrid" AutoGenerateColumns="False" ItemsSource="{Binding}" SelectionUnit="Cell" SelectionMode="Single" IsReadOnly="False" Grid.Column="1"
                              MinHeight="300" MinWidth="500" Margin="0,0,0,20" VerticalAlignment="Center" HorizontalAlignment="Center" 
                              LoadingRow="mDataGrid_LoadingRow" 
                              MouseDoubleClick="mDataGrid_MouseDoubleClick" DataGridCell.Selected="DataGridCell_Selected" KeyUp="mDataGrid_KeyUp" BeginningEdit="mDataGrid_BeginningEdit">
                        <DataGrid.Columns>
                            <!--<DataGridTextColumn IsReadOnly="True" Header="#" Binding="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Path=(ItemsControl.AlternationIndex)}"/>-->
                            <DataGridTextColumn IsReadOnly="True" Header="#" Binding="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Path=Header}"/>
                            <DataGridCheckBoxColumn Header="Enable" Binding="{Binding Path=mTable_IsEnable}"/>
                            <DataGridComboBoxColumn Header="Mode" x:Name="mComboBoxColumn" SelectedItemBinding="{Binding Path=mTable_Mode}" MinWidth="100"/>
                            <DataGridTextColumn Header="Event" Binding="{Binding Path=mTable_Event}"/>
                            <DataGridTextColumn Header="Action" Binding="{Binding Path=mTable_Action}" MinWidth="250"/>
                            <DataGridTemplateColumn Header=" ">
                                <DataGridTemplateColumn.CellTemplate >
                                    <DataTemplate>
                                        <Image  Height="16" Width="16" Source="trash.png"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="+">
                                <DataGridTemplateColumn.CellTemplate >
                                    <DataTemplate>
                                        <Image  Height="16" Width="16" Source="plus.png"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>

                    <Controls:ToggleSwitch Toggled="Btn_Toggle_Click" Name="Btn_Toggle" OffContent="Record Off" OnContent="Record ON" Height="28" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="20,0,0,0" Grid.Column="1"></Controls:ToggleSwitch>
                    <Button Click="Btn_open_Click" Content="Open" MinWidth="25" Width="50" Height="17" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,0,0" Grid.Column="1" />
                    <Button Click="Btn_Save_Click" Name="Btn_Save" Content="Save" MinWidth="25" Width="50" Height="17" HorizontalAlignment="Right" VerticalAlignment="Bottom"  Margin="0,0,60,0" Grid.Column="1"/>
                    <Button Click="Btn_Save_as_Click" Name="Btn_Save_AS" Content="Save as" MinWidth="25" Width="50" Height="17" HorizontalAlignment="Right" VerticalAlignment="Bottom"  Margin="0,0,120,0" Grid.Column="1"/>
                    <Button Click="Btn_Run_Click" Name="Btn_Run" Content="Run" MinWidth="25" Width="50" Height="17" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,240,0" Grid.Column="1" />
                    <Button Click="Btn_Stop_Click" Name="Btn_Stop" Content="Stop" MinWidth="25" Width="50" Height="17" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,180,0" Grid.Column="1" />
                    <!--<Controls:ProgressRing Name="Ring" IsActive="{Binding Path=IsActive}"  MinWidth="25" Width="25" Height="17" HorizontalAlignment="Right" VerticalAlignment="Bottom"  Margin="0,0,350,0"/>-->
                    <Controls:ProgressRing Name="Ring" IsActive="False"  MinWidth="25" Width="25" Height="17" HorizontalAlignment="Center" VerticalAlignment="Bottom"  Margin="0,0,0,0" Grid.Column="1"/>

                </Grid>
            </TabItem>
        </TabControl>
    </Grid>

</Controls:MetroWindow>
<Controls:MetroWindow x:Class="Metro.MainWindow"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                      x:Name="_Window"
                      Title="Scriptboxie"
                      TitleCharacterCasing="Normal"
                      Height="400"
                      Width="800"             
                      xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
                      xmlns:markdig="clr-namespace:Markdig.Wpf;assembly=Markdig.Wpf"
                      Dialog:DialogParticipation.Register="{Binding}" Closing="MetroWindow_Closing" Loaded="MetroWindow_Loaded" Deactivated="MetroWindow_Deactivated"
                      SizeChanged="MetroWindow_SizeChanged" LostKeyboardFocus="MetroWindow_LostKeyboardFocus" GotKeyboardFocus="_Window_GotKeyboardFocus">

    <Controls:MetroWindow.RightWindowCommands>
        <Controls:WindowCommands>
            <Button Name="Btn_ON" Click="Btn_ON_Click" Content="ON" Width="45" FontWeight="Bold" ToolTip="{DynamicResource Btn_ON_Tooltip}" ToolTipService.InitialShowDelay="300">
                <Button.Style>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MahApps.Styles.Button.MetroWindow.Light}">
                        <Style.Triggers>
                            <Trigger Property="Foreground" Value="Red">
                                <Setter Property="Background" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="Foreground" Value="White">
                                <Setter Property="Background" Value="Transparent"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
                    <Button Name="Btn_About" Click="Btn_About_Click" Content="{DynamicResource About}"/>
            <ToggleButton Content="{DynamicResource Help}" IsChecked="{Binding ElementName=MahAppFlyout, Path=IsOpen}" Cursor="Hand" />
            <TextBox x:Name="TextBox_Title" Width="100" Margin="5px" TextChanged="TextBox_Title_TextChanged" 
                     ToolTip="{DynamicResource TextBox_Title_Tooltip}" ToolTipService.InitialShowDelay="300"/>
        </Controls:WindowCommands>
    </Controls:MetroWindow.RightWindowCommands>

    <Controls:MetroWindow.Flyouts>
        <Controls:FlyoutsControl>
            <Controls:Flyout x:Name="MahAppFlyout" Width="430" Opacity="0.9">
                <markdig:MarkdownViewer x:Name="Viewer">
                    <markdig:MarkdownViewer.Resources>
                        <Style TargetType="{x:Type Paragraph}" x:Key="{x:Static markdig:Styles.Heading1StyleKey}">
                            <Setter Property="FontSize" Value="42" />
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="FontWeight" Value="Bold" />
                            <Setter Property="FontSize" Value="25" />
                        </Style>
                        <Style TargetType="{x:Type Paragraph}" x:Key="{x:Static markdig:Styles.Heading3StyleKey}">
                            <Setter Property="FontSize" Value="18" />
                            <Setter Property="Foreground" Value="Yellow" />
                            <Setter Property="FontWeight" Value="Bold" />
                        </Style>
                        <Style TargetType="{x:Type Section}" x:Key="{x:Static markdig:Styles.QuoteBlockStyleKey}">
                            <Setter Property="BorderBrush" Value="LightGray" />
                            <Setter Property="BorderThickness" Value="4,0,0,0" />
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="Padding" Value="16,0,0,0" />
                        </Style>
                        <Style TargetType="{x:Type Run}" x:Key="{x:Static markdig:Styles.CodeStyleKey}">
                            <Setter Property="Background" Value="#ff636363" />
                        </Style>
                    </markdig:MarkdownViewer.Resources>
                </markdig:MarkdownViewer>
            </Controls:Flyout>
        </Controls:FlyoutsControl>
    </Controls:MetroWindow.Flyouts>

    <Grid>
        <TextBlock  Text="{DynamicResource NewVersion}" PreviewMouseDown="NewVersion_PreviewMouseDown" 
                    Foreground="OrangeRed" Visibility="Hidden" Name="NewVersion" Height="14" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,10,10,0" Grid.Column="1">
            <TextBlock.Style>
                <Style TargetType="TextBlock">
                    <Setter Property= "Background" Value="White"/>
                    <Style.Triggers>
                        <Trigger Property ="IsMouseOver" Value="True">
                            <Setter Property= "Background" Value="LightGray"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>

        <TabControl VerticalAlignment="Top" SelectionChanged="TabControl_SelectionChanged">
            <TabItem Header="{DynamicResource Main}">
                <Grid Background="White" Name="ScriptGrid" >
                    <ScrollViewer Name="ScriptGridScroll" VerticalScrollBarVisibility="Auto" HorizontalAlignment="Center" Margin="0,0,0,25" PreviewMouseWheel="ScriptGridScroll_PreviewMouseWheel" FocusVisualStyle="{x:Null}">
                        <DataGrid ScrollViewer.CanContentScroll="True" VerticalScrollBarVisibility="Disabled" CanUserSortColumns="False" Name="eDataGrid" AutoGenerateColumns="False" ItemsSource="{Binding}" SelectionUnit="Cell" SelectionMode="Single" IsReadOnly="False" IsEnabled="False"
                              HorizontalAlignment="Center" CanUserAddRows="False"
                              CellEditEnding="eDataGrid_CellEditEnding" CurrentCellChanged="eDataGrid_CurrentCellChanged" MouseDoubleClick="eDataGrid_MouseDoubleClick" DataGridCell.Selected="DataGridCell_Selected"  KeyUp="eDataGrid_KeyUp">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="#" IsReadOnly="True"/>
                                <DataGridCheckBoxColumn Header="Enable" Binding="{Binding Path=eTable_Enable}"/>
                                <DataGridTextColumn Header="Name" Binding="{Binding Path=eTable_Name}"/>
                                <DataGridTextColumn Header="Key" Binding="{Binding Path=eTable_Key}">
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="DataGridCell">
                                            <Setter Property="ToolTip" Value="ex:F12,Alt+A,Shift+B,Ctrl+C......If script has press certain key, should avoid using it as hotkey" />
                                            <Setter Property="VerticalAlignment" Value="Center"/>
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Header="State" IsReadOnly="True" Binding="{Binding Path=eTable_State}">
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Style.Triggers>
                                                <Trigger Property="Text" Value="Stop">
                                                    <Setter Property="Foreground" Value="Gray"/>
                                                </Trigger>
                                                <Trigger Property="Text" Value="Running">
                                                    <Setter Property="Foreground" Value="OrangeRed"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>

                                <DataGridTextColumn Header="Note" Binding="{Binding Path=eTable_Note}" MinWidth="150"/>
                                <DataGridTextColumn Header="Path" Binding="{Binding Path=eTable_Path}" MinWidth="200">
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="DataGridCell">
                                            <Setter Property="ToolTip" Value="{DynamicResource Double_click_to_select_file}"/>
                                            <Setter Property="VerticalAlignment" Value="Center"/>
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                </DataGridTextColumn>
                                <DataGridTemplateColumn Header=" ">
                                    <DataGridTemplateColumn.CellTemplate >
                                        <DataTemplate>
                                            <Image  Height="16" Width="16" Source="img/trash.png"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Header="+">
                                    <DataGridTemplateColumn.CellTemplate >
                                        <DataTemplate>
                                            <Image  Height="16" Width="16" Source="img/plus.png"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </ScrollViewer>

                    <Controls:ToggleSwitch Toggled="Script_Toggle_Toggled" Name="Script_Toggle" Height="28" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="20,0,0,0" FocusVisualStyle="{x:Null}"></Controls:ToggleSwitch>
                    <TextBlock x:Name="TextBlock_Please" Visibility="Hidden" Height="14" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,20,0" Grid.Column="1">
                         <Run Foreground="OrangeRed" Text="{DynamicResource Please_run_as_administrator}" 
                              ToolTip="Some programs have higher permissions, and if you need to operate them, you must have higher permissions; otherwise, it is unnecessary"></Run>
                    </TextBlock>
                </Grid>
            </TabItem>
            <TabItem Header="{DynamicResource Edit}">
                <Grid Background="White" Name="EditGrid">

                    <DataGrid Name="mDataGrid" CanUserSortColumns="False" AutoGenerateColumns="False" ItemsSource="{Binding}" SelectionUnit="Cell" SelectionMode="Single" IsReadOnly="False" Grid.Column="1"
                              MinHeight="300" MinWidth="500" Margin="25,0,0,25"  HorizontalAlignment="Center" 
                              LoadingRow="mDataGrid_LoadingRow" CanUserAddRows="False" ScrollViewer.ScrollChanged="mDataGrid_ScrollChanged"
                              MouseDoubleClick="mDataGrid_MouseDoubleClick" DataGridCell.Selected="DataGridCell_Selected" KeyUp="mDataGrid_KeyUp" BeginningEdit="mDataGrid_BeginningEdit">
                        <DataGrid.Resources>
                            <DataTemplate x:Key="template">
                                <StackPanel Orientation="Horizontal">
                                    <Image  Height="16" Width="16">
                                        <Image.Style>
                                            <Style TargetType="Image">
                                                <Style.Triggers>
                                                    <Trigger Property="DataContext" Value="Move">
                                                        <Setter Property="Source" Value="img/move.png"/>
                                                    </Trigger>
                                                    <Trigger Property="DataContext" Value="Offset">
                                                        <Setter Property="Source" Value="img/move.png"/>
                                                    </Trigger>
                                                    <Trigger Property="DataContext" Value="Click">
                                                        <Setter Property="Source" Value="img/mouse.png"/>
                                                    </Trigger>
                                                    <Trigger Property="DataContext" Value="Match">
                                                        <Setter Property="Source" Value="img/match.png"/>
                                                    </Trigger>
                                                    <Trigger Property="DataContext" Value="Match RGB">
                                                        <Setter Property="Source" Value="img/match.png"/>
                                                    </Trigger>
                                                    <Trigger Property="DataContext" Value="Match&amp;Draw">
                                                        <Setter Property="Source" Value="img/match.png"/>
                                                    </Trigger>
                                                    <Trigger Property="DataContext" Value="Key">
                                                        <Setter Property="Source" Value="img/key.png"/>
                                                    </Trigger>
                                                    <Trigger Property="DataContext" Value="ModifierKey">
                                                        <Setter Property="Source" Value="img/key.png"/>
                                                    </Trigger>
                                                    <Trigger Property="DataContext" Value="SendKeyDown">
                                                        <Setter Property="Source" Value="img/key.png"/>
                                                    </Trigger>
                                                    <Trigger Property="DataContext" Value="SendKeyUp">
                                                        <Setter Property="Source" Value="img/key.png"/>
                                                    </Trigger>
                                                    <Trigger Property="DataContext" Value="Delay">
                                                        <Setter Property="Source" Value="img/delay.png"/>
                                                    </Trigger>
                                                    <Trigger Property="DataContext" Value="Jump">
                                                        <Setter Property="Source" Value="img/jump.png"/>
                                                    </Trigger>
                                                    <Trigger Property="DataContext" Value="Goto">
                                                        <Setter Property="Source" Value="img/goto.png"/>
                                                    </Trigger>
                                                    <Trigger Property="DataContext" Value="Loop">
                                                        <Setter Property="Source" Value="img/loop.png"/>
                                                    </Trigger>
                                                    <Trigger Property="DataContext" Value="RemoveEvent">
                                                        <Setter Property="Source" Value="img/x.png"/>
                                                    </Trigger>
                                                    <Trigger Property="DataContext" Value="Clear Screen">
                                                        <Setter Property="Source" Value="img/clean2.png"/>
                                                    </Trigger>
                                                    <Trigger Property="DataContext" Value="Run .exe">
                                                        <Setter Property="Source" Value="img/run.png"/>
                                                    </Trigger>
                                                    <Trigger Property="DataContext" Value="PlaySound">
                                                        <Setter Property="Source" Value="img/sound.png"/>
                                                    </Trigger>
                                                    <Trigger Property="DataContext" Value="WriteClipboard">
                                                        <Setter Property="Source" Value="img/clipboard.png"/>
                                                    </Trigger>
                                                    <Trigger Property="DataContext" Value="RandomTrigger">
                                                        <Setter Property="Source" Value="img/random.png"/>
                                                    </Trigger>

                                                    <Trigger Property="DataContext" Value="Calc">
                                                        <Setter Property="Source" Value="img/Calc.png"/>
                                                    </Trigger>
                                                    <Trigger Property="DataContext" Value="Calc-Check">
                                                        <Setter Property="Source" Value="img/Calc.png"/>
                                                    </Trigger>

                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>

                                    <TextBlock Margin="3,0,0,0">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock" >
                                                <!--<Setter Property="Text" Value="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Path=DataContext.Mode}" />-->
                                                <Style.Triggers>
                                                    <Trigger Property="DataContext" Value="Move">
                                                        <Setter Property="Foreground" Value="Black"/>
                                                        <Setter Property="Text" Value="Move" />
                                                    </Trigger>
                                                    <Trigger Property="DataContext" Value="Offset">
                                                        <Setter Property="Foreground" Value="Black"/>
                                                        <Setter Property="Text" Value="Offset" />
                                                    </Trigger>
                                                    <Trigger Property="DataContext" Value="Click">
                                                        <Setter Property="Foreground" Value="Black"/>
                                                        <Setter Property="Text" Value="Click" />
                                                    </Trigger>
                                                    <Trigger Property="DataContext" Value="Match">
                                                        <Setter Property="Foreground" Value="DarkRed"/>
                                                        <Setter Property="Text" Value="Match" />
                                                    </Trigger>
                                                    <Trigger Property="DataContext" Value="Match RGB">
                                                        <Setter Property="Foreground" Value="DarkRed"/>
                                                        <Setter Property="Text" Value="Match RGB" />
                                                    </Trigger>
                                                    <Trigger Property="DataContext" Value="Match&amp;Draw">
                                                        <Setter Property="Foreground" Value="DarkRed"/>
                                                        <Setter Property="Text" Value="Match&amp;Draw"/>
                                                    </Trigger>
                                                    <Trigger Property="DataContext" Value="Key">
                                                        <Setter Property="Foreground" Value="Black"/>
                                                        <Setter Property="Text" Value="Key" />
                                                    </Trigger>
                                                    <Trigger Property="DataContext" Value="ModifierKey">
                                                        <Setter Property="Foreground" Value="Black"/>
                                                        <Setter Property="Text" Value="ModifierKey" />
                                                    </Trigger>
                                                    <Trigger Property="DataContext" Value="SendKeyDown">
                                                        <Setter Property="Foreground" Value="Black"/>
                                                        <Setter Property="Text" Value="SendKeyDown" />
                                                    </Trigger>
                                                    <Trigger Property="DataContext" Value="SendKeyUp">
                                                        <Setter Property="Foreground" Value="Black"/>
                                                        <Setter Property="Text" Value="SendKeyUp" />
                                                    </Trigger>
                                                    <Trigger Property="DataContext" Value="Delay">
                                                        <Setter Property="Foreground" Value="Black"/>
                                                        <Setter Property="Text" Value="Delay" />
                                                    </Trigger>
                                                    <Trigger Property="DataContext" Value="Jump">
                                                        <Setter Property="Foreground" Value="Black"/>
                                                        <Setter Property="Text" Value="Jump" />
                                                    </Trigger>
                                                    <Trigger Property="DataContext" Value="Goto">
                                                        <Setter Property="Foreground" Value="Black"/>
                                                        <Setter Property="Text" Value="Goto" />
                                                    </Trigger>
                                                    <Trigger Property="DataContext" Value="Loop">
                                                        <Setter Property="Foreground" Value="Black"/>
                                                        <Setter Property="Text" Value="Loop" />
                                                    </Trigger>
                                                    <Trigger Property="DataContext" Value="RemoveEvent">
                                                        <Setter Property="Foreground" Value="DarkRed"/>
                                                        <Setter Property="Text" Value="RemoveEvent" />
                                                    </Trigger>
                                                    <Trigger Property="DataContext" Value="Clear Screen">
                                                        <Setter Property="Foreground" Value="Black"/>
                                                        <Setter Property="Text" Value="Clear Screen" />
                                                    </Trigger>
                                                    <Trigger Property="DataContext" Value="Run .exe">
                                                        <Setter Property="Foreground" Value="Black"/>
                                                        <Setter Property="Text" Value="Run .exe" />
                                                    </Trigger>
                                                    <Trigger Property="DataContext" Value="PlaySound">
                                                        <Setter Property="Foreground" Value="Black"/>
                                                        <Setter Property="Text" Value="PlaySound" />
                                                    </Trigger>
                                                    <Trigger Property="DataContext" Value="WriteClipboard">
                                                        <Setter Property="Foreground" Value="Black"/>
                                                        <Setter Property="Text" Value="WriteClipboard" />
                                                    </Trigger>
                                                    <Trigger Property="DataContext" Value="RandomTrigger">
                                                        <Setter Property="Foreground" Value="DarkRed"/>
                                                        <Setter Property="Text" Value="RandomTrigger" />
                                                    </Trigger>

                                                    <Trigger Property="DataContext" Value="Calc">
                                                        <Setter Property="Foreground" Value="Black"/>
                                                        <Setter Property="Text" Value="Calc" />
                                                    </Trigger>
                                                    <Trigger Property="DataContext" Value="Calc-Check">
                                                        <Setter Property="Foreground" Value="DarkRed"/>
                                                        <Setter Property="Text" Value="Calc-Check" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </StackPanel>
                            </DataTemplate>

                        </DataGrid.Resources>
                        
                        <DataGrid.RowStyle>
                            <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource MahApps.Styles.DataGridRow}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=flag}" Value="true">
                                        <Setter Property="Background" Value="#84FF6800"></Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=flag}" Value="false">
                                        <Setter Property="Background" Value="Transparent"></Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.RowStyle>

                        <DataGrid.Columns>
                            <!--<DataGridTextColumn IsReadOnly="True" Header="#" Binding="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Path=(ItemsControl.AlternationIndex)}"/>-->
                            <DataGridTextColumn IsReadOnly="True" Header="#" Binding="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Path=Tag}"/>
                            <DataGridCheckBoxColumn Header="Enable" Binding="{Binding Path=Enable}"/>
                            <DataGridComboBoxColumn Header="Mode" x:Name="mComboBoxColumn" SelectedItemBinding="{Binding Path=Mode}" MinWidth="100">
                                <DataGridComboBoxColumn.ElementStyle>
                                    <Style TargetType="{x:Type ComboBox}">
                                        <Setter Property="ItemTemplate" Value="{StaticResource template}" />
                                    </Style>
                                </DataGridComboBoxColumn.ElementStyle>
                                <DataGridComboBoxColumn.EditingElementStyle>
                                    <Style TargetType="{x:Type ComboBox}">
                                        <Setter Property="ItemTemplate" Value="{StaticResource template}" />
                                        <EventSetter Event="Loaded" Handler="ComboBox_Loaded" />
                                    </Style>
                                </DataGridComboBoxColumn.EditingElementStyle>
                            </DataGridComboBoxColumn>
                            <DataGridTextColumn Header="Event" Binding="{Binding Path=Event}"/>
                            <DataGridTextColumn Header="Action" Binding="{Binding Path=Action}" MinWidth="200"/>
                            <DataGridTextColumn Header="Note" Binding="{Binding Path=Note}" MinWidth="50" Foreground="ForestGreen"/>
                            <DataGridTemplateColumn Header=" ">
                                <DataGridTemplateColumn.CellTemplate >
                                    <DataTemplate>
                                        <Image  Height="16" Width="16" Source="img/trash.png"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="+">
                                <DataGridTemplateColumn.CellTemplate >
                                    <DataTemplate>
                                        <Image  Height="16" Width="16" Source="img/plus.png"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>

                    <Button PreviewGotKeyboardFocus="ClearScreen_Btn_PreviewGotKeyboardFocus" PreviewMouseMove="ClearScreen_Btn_PreviewMouseMove" PreviewKeyDown="ClearScreen_Btn_PreviewKeyDown" 
                            Name="ClearScreen_Btn" FocusVisualStyle="{x:Null}"
                            Height="25" Width="25" HorizontalAlignment="Left" VerticalAlignment="Top" Style="{DynamicResource MahApps.Styles.Button.Circle}"  Click="ClearScreen_Click" >
                        <Image  Height="15" Width="15" Source="img/clean2.png"/>
                    </Button>

                    <ToggleButton ToolTip="display mouse position" Click="InfoToggleButton_Checked" Name="InfoToggleButton" Height="25" Width="25" HorizontalAlignment="Left" VerticalAlignment="Top"  Margin="0,30,0,0" Style="{DynamicResource MahApps.Styles.Button.Circle}">
                        <Image  Height="15" Width="15" Source="img/info.png"/>
                    </ToggleButton>
                    <Popup Name="InfoPopup" IsOpen="{Binding IsChecked, ElementName=InfoToggleButton}" StaysOpen="True" Placement="Custom" >
                        <Border Background="White">
                            <TextBlock Name="PopupText"></TextBlock>
                        </Border>
                    </Popup>

                    <ToolBar Name="ToolBar" MinWidth="80" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,0,0,0">
                        
                    </ToolBar>
                    
                    <Controls:ToggleSwitch Toggled="Btn_Toggle_Click" ToolTip="{DynamicResource Record_Tooltip}" ToolTipService.InitialShowDelay="300" Name="Btn_Toggle" OffContent="Record Off" OnContent="Record ON" Height="28" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="20,0,0,0" Grid.Column="1"></Controls:ToggleSwitch>
                    <TextBlock Name="ScriptName" Foreground="Gray" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="150,0,0,3" ></TextBlock>
                    <Button DataContext="{Binding ElementName=_Window}" IsEnabled="{Binding Path= IsRecord}" Click="Btn_New_Click" Content="New" MinWidth="25" Width="50" Height="17" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,180,0" Grid.Column="1" />
                    <Button DataContext="{Binding ElementName=_Window}" IsEnabled="{Binding Path= IsRecord}" Click="Btn_open_Click" Content="Open" MinWidth="25" Width="50" Height="17" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,0,0" Grid.Column="1" />
                    <Button DataContext="{Binding ElementName=_Window}" IsEnabled="{Binding Path= IsRecord}" Click="Btn_Save_Click" Name="Btn_Save" Content="Save" MinWidth="25" Width="50" Height="17" HorizontalAlignment="Right" VerticalAlignment="Bottom"  Margin="0,0,60,0" Grid.Column="1"/>
                    <Button DataContext="{Binding ElementName=_Window}" IsEnabled="{Binding Path= IsRecord}" Click="Btn_Save_as_Click" Name="Btn_Save_AS" Content="Save as" MinWidth="25" Width="52" Height="17" HorizontalAlignment="Right" VerticalAlignment="Bottom"  Margin="0,0,118,0" Grid.Column="1"/>
                    <Button DataContext="{Binding ElementName=_Window}" IsEnabled="{Binding Path= IsRecord}" Click="Btn_Run_Click" Name="Btn_Run" Content="Run" MinWidth="25" Width="50" Height="17" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,300,0" Grid.Column="1" />
                    <Button DataContext="{Binding ElementName=_Window}" IsEnabled="{Binding Path= IsRecord}" Click="Btn_Stop_Click" Name="Btn_Stop" Content="Stop" MinWidth="25" Width="50" Height="17" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,240,0" Grid.Column="1" />
                    <Controls:ProgressRing Name="Ring" IsActive="False"  MinWidth="25" Width="25" Height="17" HorizontalAlignment="Center" VerticalAlignment="Bottom"  Margin="0,0,0,0" Grid.Column="1" Foreground="OrangeRed"/>
                </Grid>
            </TabItem>
            <TabItem Header="{DynamicResource Setting}">
                <Grid Background="White" Name="SettingGrid">
                    <ScrollViewer>
                        <TextBlock ScrollViewer.CanContentScroll="True" Margin="5px" MinHeight="300">
                                     
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*" />
            <ColumnDefinition Width="2*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="1*" />
            <RowDefinition Height="1*" />
            <RowDefinition Height="1*" />
        </Grid.RowDefinitions>
        
        <TextBlock><Run FontSize="16" Foreground="Black" Text="{DynamicResource Website}"></Run> <Run FontSize="16" Foreground="Black">(Github)</Run></TextBlock>
        <TextBlock Grid.Column="1"><Hyperlink NavigateUri="https://github.com/gemilepus/Scriptboxie" RequestNavigate="Hyperlink_RequestNavigate">                    
            <Run FontSize="16" Foreground="Black">https://github.com/gemilepus/Scriptboxie</Run>          
        </Hyperlink></TextBlock>

        <TextBlock Grid.Row="1" Grid.Column="1"><Run FontSize="12" Foreground="Gray"  Text="{DynamicResource Website_Note}"></Run></TextBlock>
        
        <TextBlock Grid.Row="2"><Run FontSize="16" Foreground="Black" Text="Donate "></Run><Run FontSize="16" Foreground="Black">(Paypal)</Run></TextBlock>
        <TextBlock Grid.Row="2" Grid.Column="1"><Hyperlink NavigateUri="https://paypal.me/gemilepus?locale.x=en_US" RequestNavigate="Hyperlink_RequestNavigate" TextDecorations="None">                     
            <Image Height="25" Source="img/palpay.png" />         
        </Hyperlink></TextBlock>
        
        <TextBlock  Grid.Row="3">  <Run FontSize="16" Foreground="Black" Text="Donate   "></Run><Run FontSize="16" Foreground="Black">(ko-fi)</Run></TextBlock>
        <TextBlock  Grid.Row="3" Grid.Column="1"><Hyperlink NavigateUri="https://ko-fi.com/gemilepus" RequestNavigate="Hyperlink_RequestNavigate" TextDecorations="None">                        
            <Image Height="25" Source="img/kofi.png" />       
        </Hyperlink></TextBlock>
        
    </Grid>
                            
                            <LineBreak/>
                            <LineBreak/>
                            
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2*" />
            <ColumnDefinition Width="1*" />
            <ColumnDefinition Width="1*" />
            <ColumnDefinition Width="1*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="1*" />
            <RowDefinition Height="1*" />
            <RowDefinition Height="1*" />
        </Grid.RowDefinitions>
        <TextBlock><Run FontSize="16" Foreground="Black" Text="{DynamicResource ON_OFF_Option}"></Run></TextBlock>
        <CheckBox Grid.Column="1" x:Name="OnOff_CrtlKey_Chk" Content="Ctrl  +" Checked="CheckBox_Checked" Unchecked="CheckBox_Checked"/>
        <CheckBox Grid.Column="2" x:Name="OnOff_AltKey_Chk" Content="Alt  +" Checked="CheckBox_Checked" Unchecked="CheckBox_Checked"/>
        <TextBox Grid.Column="3" x:Name="TextBox_OnOff_Hotkey" KeyDown="TextBox_OnOff_Hotkey_KeyDown" TextChanged="TextBox_OnOff_Hotkey_TextChanged" Width="70"/>

        <TextBlock Grid.Row="1"><Run FontSize="16" Foreground="Black" Text="{DynamicResource Run_Editing_Script_Option}"></Run></TextBlock>
        <CheckBox Grid.Column="1" Grid.Row="1" x:Name="Run_CrtlKey_Chk" Content="Ctrl  +" Checked="CheckBox_Checked" Unchecked="CheckBox_Checked"/>
        <CheckBox Grid.Column="2" Grid.Row="1" x:Name="Run_AltKey_Chk" Content="Alt  +" Checked="CheckBox_Checked" Unchecked="CheckBox_Checked"/>
        <TextBox Grid.Column="3" Grid.Row="1" x:Name="TextBox_Run_Hotkey" KeyDown="TextBox_Run_Hotkey_KeyDown"  TextChanged="TextBox_Run_Hotkey_TextChanged" Width="70"/>

        <TextBlock Margin="0,0,5,0" Grid.Row="2"><Run FontSize="16" Foreground="Black" Text="{DynamicResource Stop_Editing_Script_Option}"></Run></TextBlock>
        <CheckBox Grid.Column="1" Grid.Row="2" x:Name="Stop_CrtlKey_Chk" Content="Ctrl  +" Checked="CheckBox_Checked" Unchecked="CheckBox_Checked"/>
        <CheckBox Grid.Column="2" Grid.Row="2" x:Name="Stop_AltKey_Chk" Content="Alt  +" Checked="CheckBox_Checked" Unchecked="CheckBox_Checked"/>
        <TextBox Grid.Column="3" Grid.Row="2" x:Name="TextBox_Stop_Hotkey" KeyDown="TextBox_Stop_Hotkey_KeyDown" TextChanged="TextBox_Stop_Hotkey_TextChanged" Width="70"/>
        
        <TextBlock Margin="0,0,5,0" Grid.Row="3"><Run FontSize="16" Foreground="Black" Text="{DynamicResource Type_Of_Keyboard_Input}"></Run></TextBlock>
        <RadioButton Grid.Column="1" Grid.Row="3" GroupName="TypeOfKeyboardInput" Name="TypeOfKeyboardInput0" Checked="RadioButton_Checked" Content="{DynamicResource Game}" Tag="Game"></RadioButton>
		<RadioButton Grid.Column="2" Grid.Row="3" GroupName="TypeOfKeyboardInput" Name="TypeOfKeyboardInput1" Checked="RadioButton_Checked" Content="{DynamicResource Normal}" Tag="Normal"></RadioButton>
    </Grid>
                            <LineBreak/><LineBreak/>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*" />
            <ColumnDefinition Width="1*" />
            <ColumnDefinition Width="1*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="1*" />
            <RowDefinition Height="1*" />
        </Grid.RowDefinitions>
        
        <TextBlock MinWidth="110"><Run FontSize="16" Foreground="Black" Text="{DynamicResource Hide_on_start_Option}"></Run></TextBlock>
        <Controls:ToggleSwitch Grid.Column="1" Toggled="HideOnSatrt_Toggle_Toggled" Name="HideOnSatrt_Toggle" Height="28" Margin="0,-5,0,0"></Controls:ToggleSwitch>
        
        <TextBlock Grid.Row="1"><Run FontSize="16" Foreground="Black" Text="{DynamicResource Topmost_Option}"></Run></TextBlock>                          
        <Controls:ToggleSwitch Grid.Row="1" Grid.Column="1" Name="Top_Toggle" Toggled="Top_Toggle_Toggled" Height="28" Margin="0,-5,0,0"></Controls:ToggleSwitch>
        
        <TextBlock Grid.Row="2"><Run FontSize="16" Foreground="Black" Text="{DynamicResource Test_Mode_Option}"></Run></TextBlock>                         
        <Controls:ToggleSwitch Grid.Row="2" Grid.Column="1" Toggled="TestMode_Toggle_Toggled" Name="TestMode_Toggle" Height="28" ToolTip="{DynamicResource Test_Mode_Tooltip}" ToolTipService.InitialShowDelay="300" Margin="0,-5,0,0"></Controls:ToggleSwitch>
        <TextBlock Grid.Row="2" Grid.Column="2" Margin="-60,0,0,0"><Run FontSize="16" Foreground="Black" Text="Test Delay(ms):"></Run></TextBlock>   
        <Slider Grid.Row="2" Grid.Column="3" x:Name="TestMode_Slider" ValueChanged="TestMode_Slider_ValueChanged"  Height="20" Width="150" Maximum="5000" IsSnapToTickEnabled="True" TickFrequency="100" AutoToolTipPlacement="TopLeft" AutoToolTipPrecision="0" Margin="70,0,0,0"></Slider>

    </Grid>
                            
                        </TextBlock>
                    </ScrollViewer>

                    <Button Click="Updates_Button_Click" Content="{DynamicResource Check_for_Updates}" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,0,15,0" MinWidth="110" Style="{StaticResource MahApps.Styles.Button.Square.Accent}" />

                    <Controls:SplitButton Name="LangSplitButton" HorizontalAlignment="Right" VerticalAlignment="Top" MinWidth="110"  Margin="0,35,15,0" SelectionChanged="LangSplitButton_SelectionChanged">
                        <Controls:SplitButton.Items>
                            <Label Tag="en">English</Label>
                            <Label Tag="zh-tw">繁體中文</Label>
                        </Controls:SplitButton.Items>
                        <Controls:SplitButton.Icon>
                            <Image  Height="16" Width="16" Source="img/globe.png"/>
                        </Controls:SplitButton.Icon>
                    </Controls:SplitButton>

                    <TextBlock HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,15,0" >
                        <Hyperlink NavigateUri="https://github.com/gemilepus/Scriptboxie/issues" RequestNavigate="Hyperlink_RequestNavigate">
                            <Run FontSize="16" Foreground="Black">Feedback</Run>
                        </Hyperlink>
                    </TextBlock>

                </Grid>
            </TabItem>
        </TabControl>
    </Grid>
</Controls:MetroWindow>
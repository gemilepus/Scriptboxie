<Page x:Class="Metro.Resources.ModeDocument_en"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:Metro.Resources"
      mc:Ignorable="d" 
      Title="ModeDocument_en">

    <Grid>
            
        <TextBlock Width = "350" Margin = "5px" ScrollViewer.CanContentScroll="True">

        <Run FontSize="16" Foreground="White">[How to use EVENT?]</Run>
        <LineBreak/>
        <LineBreak/>
            
        <Run Foreground="Gold">1.The concept is that dark red command(You can see</Run>
        <LineBreak/>
        <Run Foreground="Gold">&#160;the color distinction in the drop-down list of MODE)</Run>
        <LineBreak/>   
        <Run Foreground="Gold">&#160;can generate events,and others receive events.</Run>
        <LineBreak/>   
        <Run Foreground="Gold">&#160;Command can bound to event and executed according</Run>
        <LineBreak/>   
        <Run Foreground="Gold">&#160;to whether that is established or not.</Run>
        <LineBreak/>   
        <LineBreak/>   
        <Run Foreground="Gold">2.After the Event is established, it will always exist.</Run>
        <LineBreak/>   
        <Run Foreground="Gold">&#160;You can use RemoveEvent to invalidate it</Run>
        <LineBreak/>   
        <LineBreak/>   
        <Run Foreground="Gold">3.Event name can be named freely   </Run>
        <LineBreak/>     
            
        ex:
        <LineBreak/>  
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="2*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="1*" />
                <RowDefinition Height="1*" />
                <RowDefinition Height="1*" />
                <RowDefinition Height="1*" />
            </Grid.RowDefinitions>
            <Border Grid.Row="0" Grid.Column="0" BorderThickness="1" BorderBrush="White"/>
            <TextBlock Grid.Row="0" Grid.Column="0" Margin="3">MODE</TextBlock>
            <Border Grid.Row="0" Grid.Column="1" BorderThickness="1" BorderBrush="White"/>
            <TextBlock Grid.Row="0" Grid.Column="1" Margin="3">EVENT</TextBlock>
            <Border Grid.Row="0" Grid.Column="2" BorderThickness="1" BorderBrush="White"/>
            <TextBlock Grid.Row="0" Grid.Column="2" Margin="3">ACTION</TextBlock>
            <Border Grid.Row="0" Grid.Column="3" BorderThickness="1" BorderBrush="White"/>
            <TextBlock Grid.Row="0" Grid.Column="3" Margin="3">NOTE</TextBlock>
            
            <Border Grid.Row="1" Grid.Column="0" BorderThickness="1" BorderBrush="White"/>
            <TextBlock Grid.Row="1" Grid.Column="0" Margin="3"><Run Foreground="Red">Match</Run></TextBlock>
            <Border Grid.Row="1" Grid.Column="1" BorderThickness="1" BorderBrush="White"/>
            <TextBlock Grid.Row="1" Grid.Column="1" Margin="3">Event1</TextBlock>
            <Border Grid.Row="1" Grid.Column="2" BorderThickness="1" BorderBrush="White"/>
            <TextBlock Grid.Row="1" Grid.Column="2" Margin="3">s.png</TextBlock>
            <Border Grid.Row="1" Grid.Column="3" BorderThickness="1" BorderBrush="White"/>
            <TextBlock Grid.Row="1" Grid.Column="3" Margin="3"></TextBlock>
            
            <Border Grid.Row="2" Grid.Column="0" BorderThickness="1" BorderBrush="White"/>
            <TextBlock Grid.Row="2" Grid.Column="0" Margin="3">Click</TextBlock>
            <Border Grid.Row="2" Grid.Column="1" BorderThickness="1" BorderBrush="White"/>
            <TextBlock Grid.Row="2" Grid.Column="1" Margin="3">Event1</TextBlock>
            <Border Grid.Row="2" Grid.Column="2" BorderThickness="1" BorderBrush="White"/>
            <TextBlock Grid.Row="2" Grid.Column="2" Margin="3">Left</TextBlock>
            <Border Grid.Row="2" Grid.Column="3" BorderThickness="1" BorderBrush="White"/>
            <TextBlock Grid.Row="2" Grid.Column="3" Margin="3"></TextBlock>
            
            <Border Grid.Row="3" Grid.Column="0" BorderThickness="1" BorderBrush="White"/>
            <TextBlock Grid.Row="3" Grid.Column="0" Margin="3"><Run Foreground="Red">RemoveEvent</Run></TextBlock>          
            <Border Grid.Row="3" Grid.Column="1" BorderThickness="1" BorderBrush="White"/>
            <TextBlock Grid.Row="3" Grid.Column="1" Margin="3">Event1</TextBlock>          
            <Border Grid.Row="3" Grid.Column="2" BorderThickness="1" BorderBrush="White"/>
            <TextBlock Grid.Row="3" Grid.Column="2" Margin="3"></TextBlock>    
             <Border Grid.Row="3" Grid.Column="3" BorderThickness="1" BorderBrush="White"/>
            <TextBlock Grid.Row="3" Grid.Column="3" Margin="3"></TextBlock>    
            
            <Border Grid.Row="4" Grid.Column="0" BorderThickness="1" BorderBrush="White"/>
            <TextBlock Grid.Row="4" Grid.Column="0" Margin="3"><Run Foreground="Red">RemoveEvent</Run></TextBlock>          
            <Border Grid.Row="4" Grid.Column="1" BorderThickness="1" BorderBrush="White"/>
            <TextBlock Grid.Row="4" Grid.Column="1" Margin="3">Event1,Event2</TextBlock>          
            <Border Grid.Row="4" Grid.Column="2" BorderThickness="1" BorderBrush="White"/>
            <TextBlock Grid.Row="4" Grid.Column="2" Margin="3"></TextBlock>    
             <Border Grid.Row="4" Grid.Column="3" BorderThickness="1" BorderBrush="White"/>
            <TextBlock Grid.Row="4" Grid.Column="3" Margin="3">can multiple</TextBlock>    
            
            <Border Grid.Row="5" Grid.Column="0" BorderThickness="1" BorderBrush="White"/>
            <TextBlock Grid.Row="5" Grid.Column="0" Margin="3"><Run Foreground="Red">RemoveEvent</Run></TextBlock>          
            <Border Grid.Row="5" Grid.Column="1" BorderThickness="1" BorderBrush="White"/>
            <TextBlock Grid.Row="5" Grid.Column="1" Margin="3"></TextBlock>          
            <Border Grid.Row="5" Grid.Column="2" BorderThickness="1" BorderBrush="White"/>
            <TextBlock Grid.Row="5" Grid.Column="2" Margin="3"></TextBlock>    
             <Border Grid.Row="5" Grid.Column="3" BorderThickness="1" BorderBrush="White"/>
            <TextBlock Grid.Row="5" Grid.Column="3" Margin="3">empty means all</TextBlock>   
        </Grid>
        <LineBreak/>
            
        <LineBreak/>
        <Run FontSize="16" Foreground="White">[Mode Document]</Run>
        <LineBreak/>
        <Run Foreground="White">Explain what to input in the ACTION column</Run> 
        <LineBreak/>
        <LineBreak/>

        <Run Foreground="Gold">⭐RemoveEvent: If you want invalidate Event, use this.</Run>
        <LineBreak/>   
        <Run Foreground="Orange">-Empty</Run>
        <LineBreak/>
        <Run Foreground="Orange">-@Type</Run>
        <LineBreak/>
        Empty: direct invalidate it
        <LineBreak/>
        Type: can use PUSH,then remove the first data for event.
         <LineBreak/>
        The event will be invalidated if all the data is removed
        <LineBreak/>  
        <Line Stretch="Fill" Stroke="AntiqueWhite" X2="1"/><LineBreak/>

        <Run Foreground="Gold">⭐Match,Match&amp;Draw : match and get image point</Run>
        <LineBreak/>
        <Run Foreground="Orange">-@Path</Run>
        <LineBreak/>
        <Run Foreground="Orange">-@Path,@Threshold</Run>
        <LineBreak/>
        <Run Foreground="Orange">-@Path,@X,@Y,@Width,@Height</Run>
        <LineBreak/>
        <Run Foreground="Orange">-@Path,@X,@Y,@Width,@Height,@Threshold</Run>
        <LineBreak/>
        Path: image file path,use .png format
        <LineBreak/>
        Threshold: 0.8~1.0(def 0.9)
        <LineBreak/>
        X: start point x value
        <LineBreak/>
        Y: start point y value
        <LineBreak/>
        ex: apple.png
        <LineBreak/>
        ex: apple.png,500,500,1420,580
        <LineBreak/>
        <Run Foreground="OrangeRed">Match RGB:If your target needs to be distinguished</Run><LineBreak/>
        <Run Foreground="OrangeRed">&#160;by color,using this will have a better effect</Run><LineBreak/>
        <Run Foreground="OrangeRed">Match&amp;Draw will be marked on the screen,just for test</Run>
        <LineBreak/>
        <Line Stretch="Fill" Stroke="AntiqueWhite" X2="1"/><LineBreak/>
            
        <Run Foreground="Gold">⭐RandomTrigger : random trigger Event</Run>
        <LineBreak/>
        <Run Foreground="Orange">-@Percentage</Run>
        <LineBreak/>
        Percentage: 1~100 %,1 = 1% chance trigger Event
        <LineBreak/>
        ex: 33
        <LineBreak/>
        <Line Stretch="Fill" Stroke="AntiqueWhite" X2="1"/><LineBreak/>   

        <Run Foreground="Gold">⭐Calc(Calculator): to do the math</Run>
        <LineBreak/>
        <Run Foreground="Orange">-@Formulas</Run>
        <LineBreak/>
        Formulas: like x = 0,x = x + 1,operators can use + - * /
        <LineBreak/>
        ex: x = 0
        <LineBreak/>
        ex: y = 0
        <LineBreak/>
        ex: x = x + y*2 + 1
        <LineBreak/>
        ex: text = "DOC" + x
        <LineBreak/>
        ex: y = y + random(0,10)
        <LineBreak/>
        <Run Foreground="OrangeRed">You can use these values outside of Calc</Run>
        <LineBreak/>
        <Run Foreground="OrangeRed">by entering them like {value}.ex:</Run>
        <LineBreak/>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="1*" />
                <RowDefinition Height="1*" />
            </Grid.RowDefinitions>
            <Border Grid.Row="0" Grid.Column="0" BorderThickness="1" BorderBrush="White"/>
            <TextBlock Grid.Row="0" Grid.Column="0" Margin="3">MODE</TextBlock>
            <Border Grid.Row="0" Grid.Column="1" BorderThickness="1" BorderBrush="White"/>
            <TextBlock Grid.Row="0" Grid.Column="1" Margin="3">ACTION</TextBlock>
            <Border Grid.Row="1" Grid.Column="0" BorderThickness="1" BorderBrush="White"/>
            <TextBlock Grid.Row="1" Grid.Column="0" Margin="3">Move</TextBlock>          
            <Border Grid.Row="1" Grid.Column="1" BorderThickness="1" BorderBrush="White"/>
            <TextBlock Grid.Row="1" Grid.Column="1" Margin="3">{x},{y}</TextBlock>    
            <Border Grid.Row="2" Grid.Column="0" BorderThickness="1" BorderBrush="White"/>
            <TextBlock Grid.Row="2" Grid.Column="0" Margin="3">WriteClipboard</TextBlock>          
            <Border Grid.Row="2" Grid.Column="1" BorderThickness="1" BorderBrush="White"/>
            <TextBlock Grid.Row="2" Grid.Column="1" Margin="3">{text}  </TextBlock>    
        </Grid>
        <LineBreak/>
        <Line Stretch="Fill" Stroke="AntiqueWhite" X2="1"/><LineBreak/>   
            
        <Run Foreground="Gold">⭐Calc-Check: check values.If it is true, the Event establish,</Run>
        <LineBreak/>
        <Run Foreground="Gold">&#160;otherwise is not</Run>
        <LineBreak/>
        <Run Foreground="Orange">-@Formulas</Run>
        <LineBreak/>
         Formulas: like x > 1.operators can use ==&#160;&#160;!=,(equality),
        <LineBreak/>
         &#160;&lt;&#160;&#160;&gt;&#160;&#160;&gt;= &lt;=(relational),&#160;&amp;&amp;(conditional AND),
        <LineBreak/>   
         &#160;||(conditional OR)
        <LineBreak/>
        ex: x == 0
        <LineBreak/>
        ex: y > 5 || x > 5
        <LineBreak/>
        <Line Stretch="Fill" Stroke="AntiqueWhite" X2="1"/><LineBreak/>  
            
        <Run Foreground="Gold">⭐Move</Run>
        <LineBreak/>
        <Run Foreground="Orange">-@X,@Y</Run>
        <LineBreak/>
        <Run Foreground="Orange">-Empty</Run>
        <LineBreak/>
        X: screen point x value
        <LineBreak/>
        Y: screen point y value
        <LineBreak/>
        Empty:if set Event,it can use image matching point
        <LineBreak/>
        ex: 500,600
        <LineBreak/>
        <Line Stretch="Fill" Stroke="AntiqueWhite" X2="1"/><LineBreak/>

        <Run Foreground="Gold">⭐Offset</Run>
        <LineBreak/>
        <Run Foreground="Orange">-@X,@Y</Run>
        <LineBreak/>
        X: move x value
        <LineBreak/>
        Y: move y value
        <LineBreak/>
        ex:+10,-20
        <LineBreak/>
        <Line Stretch="Fill" Stroke="AntiqueWhite" X2="1"/><LineBreak/>

        <Run Foreground="Gold">⭐Click : mouse input</Run>
        <LineBreak/>
        <Run Foreground="Orange">-@Action</Run>
        <LineBreak/>
        Action: use Left_Down,Left_Up,Right_Down,Right_Up
        <LineBreak/>
        ex: Left_Down
        <LineBreak/>
        <Line Stretch="Fill" Stroke="AntiqueWhite" X2="1"/><LineBreak/>

        <Run Foreground="Gold">⭐SendKeyDown,SendKeyUp : keyboard input(for Game)</Run>
        <LineBreak/>
        <Run Foreground="Orange">-@Key</Run>
        <LineBreak/>
        Key: key value , can use A~Z 0~9 F1~F12...
        <LineBreak/>
        ex: A
        <LineBreak/>
        ex: RIGHT
        <LineBreak/>
        <Line Stretch="Fill" Stroke="AntiqueWhite" X2="1"/><LineBreak/>

        <Run Foreground="Gold">⭐key : keyboard input</Run>
        <LineBreak/>
        <Run Foreground="Orange">-@Key</Run>
        <LineBreak/>
        <Run Foreground="Orange">-@Key,@Type</Run>
        <LineBreak/>
        <Run Foreground="Orange">-@Key,@Time</Run>
        <LineBreak/>
        Key: key in value , can use A~Z 0~9 F1~F12 WIN ......
        <LineBreak/>
        Type: Down or Up
        <LineBreak/>
        Time: ms,1000 ms=1 second , the time keydown to keyup
        <LineBreak/>
         ex: A,Down
        <LineBreak/>
        ex: DOWN
        <LineBreak/>
        ex: 10000
        <LineBreak/>
        <Line Stretch="Fill" Stroke="AntiqueWhite" X2="1"/><LineBreak/>

        <Run Foreground="Gold">⭐ModifierKey : modifier key</Run>
        <LineBreak/>
        <Run Foreground="Orange">-@Key</Run>
        <LineBreak/>
        Key: input like modifier key|key,
        <LineBreak/>
        modifier key use CTRL,ALT,SHIFT...
        <LineBreak/>
        ex: CTRL|V
        <LineBreak/>
        <Line Stretch="Fill" Stroke="AntiqueWhite" X2="1"/><LineBreak/>
            
        <Run Foreground="Gold">⭐WriteClipboard</Run>
        <LineBreak/>
        <Run Foreground="Orange">-@Text</Run>
        <LineBreak/>
        Text: text data to clipboard
        <LineBreak/>
        ex: 123456
        <LineBreak/>
        <Line Stretch="Fill" Stroke="AntiqueWhite" X2="1"/><LineBreak/>

        <Run Foreground="Gold">⭐Delay</Run>
        <LineBreak/>
        <Run Foreground="Orange">-@Time</Run>
        <LineBreak/>
        Time: ms,1000 ms=1 second
        <LineBreak/>
        ex: 1000
        <LineBreak/>
       <Line Stretch="Fill" Stroke="AntiqueWhite" X2="1"/><LineBreak/>

        <Run Foreground="Gold">⭐Loop</Run>
        <LineBreak/>
        <Run Foreground="Orange">-@Times</Run>
        <LineBreak/>
        <Run Foreground="Orange">-Empty</Run>
        <LineBreak/>
        Times: run several times
        <LineBreak/>
        Empty: always running
        <LineBreak/>
        ex: 5
        <LineBreak/>
        <Line Stretch="Fill" Stroke="AntiqueWhite" X2="1"/><LineBreak/>

        <Run Foreground="Gold">⭐Jump</Run>
        <LineBreak/>
        <Run Foreground="Orange">-@Number</Run>
        <LineBreak/>
        Number: Jump number of line
        <LineBreak/>
        ex: -3
        <LineBreak/>
        <Line Stretch="Fill" Stroke="AntiqueWhite" X2="1"/><LineBreak/>

        <Run Foreground="Gold">⭐Goto</Run>
        <LineBreak/>
        <Run Foreground="Orange">-@Number</Run>
        <LineBreak/>
        Number: Go to number of line
        <LineBreak/>
        ex: 5
        <LineBreak/>
        <Line Stretch="Fill" Stroke="AntiqueWhite" X2="1"/><LineBreak/>

        <Run Foreground="Gold">⭐Run .exe</Run>
        <LineBreak/>
        <Run Foreground="Orange">-@Path</Run>
        <LineBreak/>
        Path: .exe Path
        <LineBreak/>
        ex: C:\Users\Metro.exe
        <LineBreak/>
       <Line Stretch="Fill" Stroke="AntiqueWhite" X2="1"/><LineBreak/>

        <Run Foreground="Gold">⭐PlaySound</Run>
        <LineBreak/>
        <Run Foreground="Orange">-@Path</Run>
        <LineBreak/>
        Path: sound file path,use .wav format
        <LineBreak/>
        ex: sound.wav
        <LineBreak/>
        <Line Stretch="Fill" Stroke="AntiqueWhite" X2="1"/><LineBreak/>
                 
         <Run Foreground="Gold">⭐Clear Screen: clear marked on the screen</Run>
         <LineBreak/>
         <Line Stretch="Fill" Stroke="AntiqueWhite" X2="1"/><LineBreak/>

         </TextBlock>
        </Grid>
</Page>
